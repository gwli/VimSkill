
文本处理的问题
**************

文本处理主要几个方面:

初次编辑
--------

要尽可能多的模板可以用，同时自动提示，减少重复以及避免尽可能多的错误。


修改阶段
--------

要快速的找到要修改的地方，并能快速精确的修改。

在文本的修改的主要是查找替换编辑，难点在于精确处理，快速的精确处理那就更难了，主要是以下几个问题。

#. *不要多改*  这个在替换操作最明显，每个编辑器都替换的操作，但是一般人不敢用，主要是原因是怕多改了。把不需要改的也改了。  
#. *不要少改*  当需要修改的地方当超过一屏的时候，需要出现的漏改的现象。 鼠标一滚，不就不知道滚到哪里。这个时候就需要Visual mode,以及下面 字词句功能
#. 就是快速，如何来保证快速了，就要靠vim中的命令了。 

而vim 的各种模式与命令都是为快速精确的处理而设计的。

输出与交换
----------

最好可能实现一个内容，同时输出多种格式与样式，html,pdf,epub等等，实现内容与形式的分离。

内容本身要结构化，再一步要对象。这样方便提取与复用。

同时各种 结构要能很多便的相互转换。

另一个那就是排版问题，这里包含公式，以及画图等等问题。

latex.


对于第一个问题，vim 能够提供自动示功能。再template的功能不是很强，当然已经有了一些插件可以用，但都是小规模的。大的一点，就要专门的template库来处理了. 最经典的要就属 perl templatetooklkit. 后面的大部分库都基于他照着它来实现的，例如 python JinJia等等。

第二个问题，基本vim可以完全胜任了。

对于第三个问题，已经完全超出了 vim 的能力。

是专门的文档结构框架来解决的。

从最初的 SGML->HTML/XML->YAML，到各种各样的 markdown. 

restructedText, 以及未来的对象化的再文档结构。
